{{- if .Values.data_ingestion.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.data_ingestion.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.data_ingestion.name }}
spec:
  replicas: {{ .Values.data_ingestion.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.data_ingestion.name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.data_ingestion.name }}
    spec:
      containers:
        - name: {{ .Values.data_ingestion.name }}
          image: "{{ .Values.data_ingestion.image.repository }}/{{ .Values.data_ingestion.image.name }}:{{ .Values.data_ingestion.image.tag }}"
          imagePullPolicy: {{ .Values.data_ingestion.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.data_ingestion.containerPort }}
          resources:
            limits:
              cpu: {{ .Values.data_ingestion.resources.limits.cpu }}
              memory: {{ .Values.data_ingestion.resources.limits.memory }}
            requests:
              cpu: {{ .Values.data_ingestion.resources.requests.cpu }}
              memory: {{ .Values.data_ingestion.resources.requests.memory }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.data_ingestion.containerPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
          {{- range .Values.data_ingestion.env }}
            - name: {{ .name }}
            {{- if .value }}
              value: {{ .value | quote }}
            {{- end }}
            {{- if .valueFrom }}
              valueFrom:
                {{- if .valueFrom.secretKeyRef }}
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
                {{- end }}
            {{- end }}
          {{- end }}
{{- end }}